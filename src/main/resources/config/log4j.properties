### set log levels - for more verbose logging change 'info' to 'debug' ###
#log4j.rootLogger = [ level ] , appenderName1, appenderName2, …
#level ：设定日志记录的最低级别，可设的值有OFF、FATAL、ERROR、WARN、INFO、DEBUG、ALL或者自定义的级别，
#Log4j建议只使用中间四个级别。通过在这里设定级别，您可以控制应用程序中相应级别的日志信息的开关，
#比如在这里设定了INFO级别，则应用程序中所有DEBUG级别的日志信息将不会被打印出来。
#appenderName：就是指定日志信息要输出到哪里。可以同时指定多个输出目的地，用逗号隔开。
log4j.rootLogger=info,console
#控制台
log4j.appender.console = org.apache.log4j.ConsoleAppender
log4j.appender.console.Target = System.out
log4j.appender.console.layout = org.apache.log4j.PatternLayout
log4j.appender.console.layout.ConversionPattern = [%d{yy-MM-dd HH:mm:ss}] %-5p - %m%n
#日志文件
log4j.appender.R=org.apache.log4j.FileAppender
log4j.appender.R.Threshold=DEBUG
log4j.appender.R.Append=true
log4j.appender.R.File=${catalina.home}/logs/little.log
log4j.appender.R.layout=org.apache.log4j.PatternLayout
log4j.appender.R.layout.ConversionPattern=[%-5p] %d(%r) --> [%t] %l: %m %x %n


log4j.logger.org=info
log4j.logger.org.springframework=info
log4j.logger.com.little=info
log4j.logger.org.hibernate=ERROR
